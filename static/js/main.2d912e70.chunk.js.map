{"version":3,"sources":["components/Carousel/Carousel.tsx","components/Form/Form.tsx","App.tsx","index.tsx"],"names":["Carousel","imgValues","transform","setTransform","images","step","frameSize","itemWidth","animationDuration","infinite","lastPosition","length","className","style","width","map","image","transition","src","alt","type","disabled","onClick","Form","setImgValues","action","method","htmlFor","id","value","min","max","onChange","event","target","name","checked","defaultImgValues","App","useState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2d912e70.chunk.js","sourcesContent":["import './Carousel.scss';\nimport { ImgValuesType } from '../../types/ImgValuesType';\n\ntype Props = {\n  imgValues: ImgValuesType,\n  transform: number,\n  setTransform: (value: number) => void,\n};\n\nexport const Carousel: React.FC<Props> = ({\n  imgValues,\n  transform,\n  setTransform,\n}) => {\n  const {\n    images,\n    step,\n    frameSize,\n    itemWidth,\n    animationDuration,\n    infinite,\n  } = imgValues;\n\n  const lastPosition = images.length - frameSize;\n\n  const handlePrevClick = () => {\n    if (transform - step > 0) {\n      setTransform(transform - step);\n    } else {\n      setTransform(0);\n    }\n\n    if (infinite && transform === 0) {\n      setTransform(lastPosition);\n    }\n  };\n\n  if (transform > lastPosition && !infinite) {\n    setTransform(lastPosition);\n  }\n\n  const handleNextClick = () => {\n    if (transform + step < lastPosition) {\n      setTransform(transform + step);\n    } else {\n      setTransform(lastPosition);\n    }\n\n    if (infinite && transform === lastPosition) {\n      setTransform(0);\n    }\n  };\n\n  return (\n    <div className=\"carousel\">\n      <ul\n        className=\"carousel__list\"\n        style={{ width: `${itemWidth * frameSize}px` }}\n      >\n        {images.map(image => (\n          <li\n            key={image}\n            className=\"carousel__item\"\n            style={{\n              transform: `translateX(${-transform * itemWidth}px)`,\n              transition: `transform ${animationDuration}ms`,\n            }}\n          >\n            <img\n              width={itemWidth}\n              src={image}\n              alt=\"Emoji\"\n              className=\"carousel__image\"\n            />\n          </li>\n        ))}\n      </ul>\n\n      <div className=\"carousel__buttons\">\n        <button\n          type=\"button\"\n          className=\"button is-link is-rounded\"\n          disabled={!infinite && transform === 0}\n          onClick={handlePrevClick}\n        >\n          Prev\n        </button>\n\n        <button\n          data-cy=\"next\"\n          type=\"button\"\n          className=\"button is-link is-rounded\"\n          disabled={!infinite && transform === lastPosition}\n          onClick={handleNextClick}\n        >\n          Next\n        </button>\n      </div>\n    </div>\n  );\n};\n","import './Form.scss';\nimport { ImgValuesType } from '../../types/ImgValuesType';\n\ntype Props = {\n  imgValues: ImgValuesType,\n  setImgValues: React.Dispatch<React.SetStateAction<ImgValuesType>>,\n};\n\nexport const Form: React.FC<Props> = ({\n  imgValues,\n  setImgValues,\n}) => {\n  const {\n    step,\n    frameSize,\n    itemWidth,\n    animationDuration,\n    infinite,\n  } = imgValues;\n\n  return (\n    <form action=\"/my-handling-form-page\" method=\"get\">\n      <ul>\n        <li>\n          <label\n            htmlFor=\"step\"\n            className=\"label\"\n          >\n            Step:\n          </label>\n\n          <input\n            type=\"number\"\n            id=\"step\"\n            className=\"input is-link\"\n            value={step}\n            min=\"1\"\n            max=\"10\"\n            onChange={event => setImgValues({\n              ...imgValues, step: +event.target.value,\n            })}\n          />\n        </li>\n\n        <li>\n          <label\n            htmlFor=\"frameSize\"\n            className=\"label\"\n          >\n            Frame Size:\n          </label>\n\n          <input\n            type=\"number\"\n            id=\"frameSize\"\n            className=\"input is-link\"\n            value={frameSize}\n            min=\"1\"\n            max=\"10\"\n            onChange={event => setImgValues({\n              ...imgValues, frameSize: +event.target.value,\n            })}\n          />\n        </li>\n\n        <li>\n          <label\n            htmlFor=\"itemWidth\"\n            className=\"label\"\n          >\n            Picture Width:\n          </label>\n\n          <input\n            type=\"number\"\n            id=\"itemWidth\"\n            className=\"input is-link\"\n            value={itemWidth}\n            min=\"130\"\n            max=\"260\"\n            step=\"5\"\n            onChange={event => setImgValues({\n              ...imgValues, itemWidth: +event.target.value,\n            })}\n          />\n        </li>\n\n        <li>\n          <label\n            htmlFor=\"animationDuration\"\n            className=\"label\"\n          >\n            Animation Duration:\n          </label>\n\n          <input\n            type=\"number\"\n            id=\"animationDuration\"\n            className=\"input is-link\"\n            value={animationDuration}\n            min=\"0\"\n            max=\"5000\"\n            step=\"50\"\n            onChange={event => setImgValues({\n              ...imgValues, animationDuration: +event.target.value,\n            })}\n          />\n        </li>\n\n        <li className=\"infinite-box\">\n          <label\n            htmlFor=\"infinite\"\n            className=\"label\"\n          >\n            Infinity scroll\n          </label>\n\n          <input\n            type=\"checkbox\"\n            name=\"infinite\"\n            id=\"infinite\"\n            checked={infinite}\n            onChange={event => setImgValues({\n              ...imgValues, infinite: event.target.checked,\n            })}\n          />\n        </li>\n      </ul>\n    </form>\n  );\n};\n","import 'bulma';\nimport React, { useState } from 'react';\nimport './App.scss';\nimport { ImgValuesType } from './types/ImgValuesType';\nimport { Carousel } from './components/Carousel';\nimport { Form } from './components/Form';\n\nconst images: string[] = [\n  './img/1.png',\n  './img/2.png',\n  './img/3.png',\n  './img/4.png',\n  './img/5.png',\n  './img/6.png',\n  './img/7.png',\n  './img/8.png',\n  './img/9.png',\n  './img/10.png',\n];\n\nconst defaultImgValues: ImgValuesType = {\n  images,\n  step: 3,\n  frameSize: 3,\n  itemWidth: 130,\n  animationDuration: 1000,\n  infinite: false,\n};\n\nexport const App: React.FC = () => {\n  const [imgValues, setImgValues] = useState(defaultImgValues);\n  const [transform, setTransform] = useState(0);\n\n  return (\n    <div className=\"App section\">\n      <h1\n        data-cy=\"title\"\n        className=\"title\"\n      >\n        {`Carousel with ${images.length} images`}\n      </h1>\n\n      <Carousel\n        imgValues={imgValues}\n        transform={transform}\n        setTransform={setTransform}\n      />\n\n      <Form\n        imgValues={imgValues}\n        setImgValues={setImgValues}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}